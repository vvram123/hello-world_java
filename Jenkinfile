pipeline {
  agent any
  stages {
    stage('Source') { // Get code
      steps {
        // get code from our Git repository
        git 'https://github.com/vvram123/hello-world_java.git'
        
      }
    }
    stage('build') { // Compile and do unit testing
      tools {
        maven 'apache-maven-3.8.5'
      }
      steps {
        // run maven to execute compile and unit testing and build package
        sh 'mvn clean test install package '
      }
    }
    
    stage('sshPublisherAnsadmin')
    { // building latest image and Publish to docker hub
        steps {
    sshPublisher(publishers: [sshPublisherDesc(configName: 'ansible_master', sshCredentials: [encryptedPassphrase: '{AAAQAAABAAAAAQzQHJe2QL8MaEg9brIHRURlBB+aJ2DpAs8K6FCS9v3PA=}', key: '', keyPath: '', username: 'ansadmin'], transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '''cd /opt/docker
 sudo docker build -t  $JOB_NAME:v1.$BUILD_ID  .  
sudo docker tag  $JOB_NAME:v1.$BUILD_ID  vvram123/$JOB_NAME:latest 
sudo docker tag  $JOB_NAME:v1.$BUILD_ID vvram123/$JOB_NAME:v1.$BUILD_ID 
sudo docker push vvram123/$JOB_NAME:v1.$BUILD_ID 
sudo  docker push vvram123/$JOB_NAME:latest 
sudo  docker rmi  $JOB_NAME:v1.$BUILD_ID vvram123/$JOB_NAME:v1.$BUILD_ID    vvram123/$JOB_NAME:latest''', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '//opt//docker', remoteDirectorySDF: false, removePrefix: 'webapp/target', sourceFiles: '**/*.war')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
  }
    }  
  stage('sshPublisherDockeradmin')
  {
      steps{
          // runing latest container
          
          sshPublisher(publishers: [sshPublisherDesc(configName: 'docker_server', sshCredentials: [encryptedPassphrase: '{AAAQAAABAAAAAQtUsukg1cLRMyA/9jRm4ZujEAVeXbDIBTrr6L/eRYE2E=}', key: '', keyPath: '', username: 'dockeradmin'], transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '''docker stop docker_vvr
docker rm -f docker_vvr
docker image rm -f vvram123/my_pipe_line_project:latest
docker run -d --name docker_vvr -p 8090:8080 vvram123/my_pipe_line_project:latest
''', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '', remoteDirectorySDF: false, removePrefix: '', sourceFiles: '')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
          
      }
      
  }
}
}
